264. Ugly Number II

Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.


class Solution:
    def nthUglyNumber(self, n: int) -> int:
        # 动态规划
        multi2=0# 表示这个位置的数×2刚好大于当前的丑数
        multi3=0
        multi5=0
        
        res=[1]
        
        for i in range(n-1):
            next_uglynum=min(res[multi2]*2,res[multi3]*3,res[multi5]*5)
            res.append(next_uglynum)
            if next_uglynum==res[multi2]*2:
                multi2+=1# 表示这个位置的数×2刚好大于当前的丑数,现在大于×2刚好大于当前丑数的就要往下移一位了（停在这不行，因为停在这×2不会大于当前的丑数）
            if next_uglynum==res[multi3]*3:
                multi3+=1
            if next_uglynum==res[multi5]*5:
                multi5+=1
                
        return res[-1]


